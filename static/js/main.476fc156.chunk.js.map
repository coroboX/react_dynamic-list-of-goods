{"version":3,"sources":["components/GoodItem.tsx","components/GoodsList.tsx","api.ts","App.tsx","index.tsx"],"names":["GoodItem","props","name","color","style","GoodsList","goods","map","id","key","loadGoods","fetch","then","response","ok","json","Error","statusText","data","catch","error","console","message","App","state","onLoadAll","setState","onLoad5","slice","onLoadRed","filter","good","this","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAKaA,G,MAAsB,SAACC,GAAW,IAE3CC,EAEED,EAFFC,KACAC,EACEF,EADFE,MAGF,OACE,wBAAIC,MAAO,CAAED,UACVD,KCLMG,EAAuB,SAACJ,GAAW,IACtCK,EAAUL,EAAVK,MAER,OACE,4BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,kBAAC,EAAD,CACEM,IAAKD,EACLN,KAAMA,EACNC,MAAOA,SCNV,SAASO,IACd,OAAOC,MAVO,2CAWXC,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAGlB,MAAM,IAAIC,MAAJ,kCAAqCH,EAASI,gBAErDL,MAAK,qBAAGM,QACRC,OAAM,SAAAC,GAIL,MAFAC,QAAQD,MAAMA,EAAME,SAEd,IAAIN,MAAM,sBCbf,IAAMO,EAAb,4MACEC,MAAe,CACblB,MAAO,GACPc,MAAO,IAHX,EAgBEK,UAAY,WACVf,IACGE,MAAK,SAACN,GACL,EAAKoB,SAAS,CACZpB,aAGHa,OAAM,SAAAC,GAAK,OAAI,EAAKM,SAAS,CAAEN,MAAOA,EAAME,cAvBnD,EA0BEK,QAAU,WACRjB,IACGE,MAAK,SAACN,GACL,EAAKoB,SAAS,CACZpB,MAAOA,EAAMsB,MAAM,EAAG,QAGzBT,OAAM,SAAAC,GAAK,OAAI,EAAKM,SAAS,CAAEN,MAAOA,EAAME,cAjCnD,EAoCEO,UAAY,WACVnB,IACGE,MAAK,SAACN,GACL,EAAKoB,SAAS,CACZpB,MAAOA,EAAMwB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAK5B,cAGpCgB,OAAM,SAAAC,GAAK,OAAI,EAAKM,SAAS,CAAEN,MAAOA,EAAME,cA3CnD,kEAMuB,IAAD,OAClBZ,IACGE,MAAK,SAACN,GACL,EAAKoB,SAAS,CACZpB,aAGHa,OAAM,SAAAC,GAAK,OAAI,EAAKM,SAAS,CAAEN,MAAOA,EAAME,eAbnD,+BA8CY,IAAD,EACkBU,KAAKR,MAAtBlB,EADD,EACCA,MAAOc,EADR,EACQA,MAEf,OACE,yBAAKa,UAAU,aACb,qDACA,4BACEC,KAAK,SACLC,QAASH,KAAKP,WAFhB,aAMA,4BACES,KAAK,SACLC,QAASH,KAAKL,SAFhB,WAMA,4BACEO,KAAK,SACLC,QAASH,KAAKH,WAFhB,aAMCT,EACI,2BAAIA,GACJ,kBAAC,EAAD,CAAWd,MAAOA,SAxE/B,GAAyB8B,IAAMC,WCR/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.476fc156.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Good } from '../types';\n\ntype Props = Pick<Good, 'name' | 'color'>;\n\nexport const GoodItem: FC<Props> = (props) => {\n  const {\n    name,\n    color,\n  } = props;\n\n  return (\n    <li style={{ color }}>\n      {name}\n    </li>\n  );\n};\n","import React, { FC } from 'react';\nimport { Good } from '../types';\nimport { GoodItem } from './GoodItem';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodsList: FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ol>\n      {goods.map(({ id, name, color }) => (\n        <GoodItem\n          key={id}\n          name={name}\n          color={color}\n        />\n      ))}\n    </ol>\n  );\n};\n","import { Good } from './types';\n// GoodsData\nconst API_URL = 'https://mate.academy/students-api/goods';\n\ninterface ResponseData<D> {\n  data: D;\n  error?: string;\n}\n\ntype GoodsData = ResponseData<Good[]>;\n\nexport function loadGoods(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`Response not successful ${response.statusText}`);\n    })\n    .then(({ data }: GoodsData) => data)\n    .catch(error => {\n      // eslint-disable-next-line no-console\n      console.error(error.message);\n\n      throw new Error('Failed to Fetch');\n    });\n}\n","// import React, { useState, FC, useEffect } from 'react';\nimport React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\nimport { Good } from './types';\nimport { loadGoods } from './api';\n\ninterface State {\n  goods: Good[];\n  error: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: [],\n    error: '',\n  };\n\n  componentDidMount() {\n    loadGoods()\n      .then((goods) => {\n        this.setState({\n          goods,\n        });\n      })\n      .catch(error => this.setState({ error: error.message }));\n  }\n\n  onLoadAll = () => {\n    loadGoods()\n      .then((goods) => {\n        this.setState({\n          goods,\n        });\n      })\n      .catch(error => this.setState({ error: error.message }));\n  };\n\n  onLoad5 = () => {\n    loadGoods()\n      .then((goods) => {\n        this.setState({\n          goods: goods.slice(0, 5),\n        });\n      })\n      .catch(error => this.setState({ error: error.message }));\n  };\n\n  onLoadRed = () => {\n    loadGoods()\n      .then((goods) => {\n        this.setState({\n          goods: goods.filter(good => good.color === 'red'),\n        });\n      })\n      .catch(error => this.setState({ error: error.message }));\n  };\n\n  render() {\n    const { goods, error } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1>Dynamic list of Goods</h1>\n        <button\n          type=\"button\"\n          onClick={this.onLoadAll}\n        >\n          All goods\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.onLoad5}\n        >\n          5 goods\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.onLoadRed}\n        >\n          red goods\n        </button>\n        {error\n          ? (<p>{error}</p>)\n          : (<GoodsList goods={goods} />)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// const useGoods = (): [Good[], string] => {\n//   const [goods, setGoods] = useState<Good[]>([]); // touple\n//   const [error, setError] = useState(''); // touple\n\n//   useEffect(() => {\n//     loadGoods()\n//       .then(goodsFromServer => setGoods(goodsFromServer))\n//       .catch(err => setError(err.message));\n//   }, []);\n\n//   return [goods, error];\n// };\n\n// const AppHooks: FC = () => {\n//   const [goods, error] = useGoods();\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Dynamic list of Goods</h1>\n//       {error\n//         ? (<p>{error}</p>)\n//         : (<GoodsList goods={goods} />)}\n//     </div>\n//   );\n// };\n\n// export {\n//   AppHooks as App,\n// };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}